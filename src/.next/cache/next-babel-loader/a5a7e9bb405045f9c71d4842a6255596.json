{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation deleteUser($email: String) {\\n    deleteUser(email: $email) {\\n      user {\\n        email\\n        name\\n        password\\n      }\\n      error\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nimport USERS from '../queries/usersQuery';\nvar DELETE_USER = gql(_templateObject());\nexport var updateCacheAfterDeleteUser = function updateCacheAfterDeleteUser(cache, _ref) {\n  var data = _ref.data;\n  var existingUsers = cache.readQuery({\n    query: USERS\n  });\n  cache.writeQuery({\n    query: USERS,\n    data: {\n      users: {\n        users: existingUsers.users.users.filter(function (user) {\n          return user.email !== data.deleteUser.user.email;\n        })\n      }\n    }\n  });\n};\nexport default DELETE_USER;","map":{"version":3,"sources":["/Users/mac/Desktop/trainig/ReactHooksNextJSApolloHooksTrainig/src/graphql/users/mutations/deleteUserMutation.js"],"names":["gql","USERS","DELETE_USER","updateCacheAfterDeleteUser","cache","data","existingUsers","readQuery","query","writeQuery","users","filter","user","email","deleteUser"],"mappings":";;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,IAAMC,WAAW,GAAGF,GAAH,mBAAjB;AAaA,OAAO,IAAMG,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,KAAD,QAAqB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC7D,MAAMC,aAAa,GAAEF,KAAK,CAACG,SAAN,CAAgB;AACnCC,IAAAA,KAAK,EAAEP;AAD4B,GAAhB,CAArB;AAGAG,EAAAA,KAAK,CAACK,UAAN,CAAiB;AACfD,IAAAA,KAAK,EAAEP,KADQ;AAEfI,IAAAA,IAAI,EAAE;AAAEK,MAAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAEJ,aAAa,CAACI,KAAd,CAAoBA,KAApB,CAA0BC,MAA1B,CAAiC,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,KAAL,KAAgBR,IAAI,CAACS,UAAL,CAAgBF,IAAhB,CAAqBC,KAAzC;AAAA,SAArC;AAAT;AAAT;AAFS,GAAjB;AAID,CARM;AAUP,eAAeX,WAAf","sourcesContent":["import { gql } from 'apollo-boost';\n\nimport USERS from '../queries/usersQuery';\n\nconst DELETE_USER = gql`\n  mutation deleteUser($email: String) {\n    deleteUser(email: $email) {\n      user {\n        email\n        name\n        password\n      }\n      error\n    }\n  }\n`\n\nexport const updateCacheAfterDeleteUser = (cache, { data }) => {\n  const existingUsers= cache.readQuery({\n    query: USERS\n  });\n  cache.writeQuery({  \n    query: USERS,\n    data: { users: { users: existingUsers.users.users.filter(user => user.email !==  data.deleteUser.user.email) } }\n  });\n};\n\nexport default DELETE_USER;"]},"metadata":{},"sourceType":"module"}