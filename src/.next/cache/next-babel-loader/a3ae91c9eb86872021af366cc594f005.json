{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/refreshMe/frontRefreshme/src/pages/users.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Formik } from 'formik';\nimport USERS from '@graphql/users/queries/usersQuery';\nimport CREATE_USER, { updateCacheAfterCreateUser } from '@graphql/users/mutations/createUserMutation';\nimport DELETE_USER, { updateCacheAfterDeleteUser } from '@graphql/users/mutations/deleteUserMutation';\n\nconst Users = () => {\n  const {\n    data,\n    loading\n  } = useQuery(USERS);\n  console.log(\"data\", data);\n  const [createUser] = useMutation(CREATE_USER, {\n    update: updateCacheAfterCreateUser\n  });\n  const [deleteUser] = useMutation(DELETE_USER, {\n    update: updateCacheAfterDeleteUser\n  });\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"loading...\");\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, data.users.users.map(user => __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    key: user.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, user.name), __jsx(\"button\", {\n    onClick: () => deleteUser({\n      variables: {\n        email: user.email\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"delete user\"))), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"users\"), __jsx(Formik, {\n    initialValues: {\n      email: '',\n      password: '',\n      name: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      } else if (!values.password) {\n        errors.password = 'Required';\n      } else if (!values.name) {\n        errors.name = 'Required';\n      }\n\n      return errors;\n    },\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      await createUser({\n        variables: {\n          userInput: _objectSpread({}, values)\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), errors.email && touched.email && errors.email, __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), errors.password && touched.password && errors.password, __jsx(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), errors.name && touched.name && errors.name, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Submit\")))));\n};\n\nexport default Users;","map":{"version":3,"sources":["/Users/mac/Desktop/refreshMe/frontRefreshme/src/pages/users.jsx"],"names":["React","useQuery","useMutation","Formik","USERS","CREATE_USER","updateCacheAfterCreateUser","DELETE_USER","updateCacheAfterDeleteUser","Users","data","loading","console","log","createUser","update","deleteUser","users","map","user","email","name","variables","password","values","errors","test","setSubmitting","userInput","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Formik } from 'formik';\n\nimport USERS from '@graphql/users/queries/usersQuery';\nimport CREATE_USER, { updateCacheAfterCreateUser } from '@graphql/users/mutations/createUserMutation';\nimport DELETE_USER, { updateCacheAfterDeleteUser } from '@graphql/users/mutations/deleteUserMutation';\n\nconst Users = () => {\n  const { data, loading } = useQuery(USERS);\n  console.log(\"data\", data);\n  const [createUser] = useMutation(CREATE_USER, { update: updateCacheAfterCreateUser });\n  const [deleteUser] = useMutation(DELETE_USER, { update: updateCacheAfterDeleteUser });\n\n  if (loading) return <p>loading...</p>\n  return (\n    <div>\n      {data.users.users.map(user =>\n        <div>\n          <p key={user.email}>{user.name}</p>\n          <button onClick={ () => deleteUser({ variables: { email: user.email }})}>delete user</button>\n        </div>\n      )}\n      <div>\n      <h1>users</h1>\n      <Formik\n        initialValues={{ email: '', password: '', name: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = 'Invalid email address';\n          } else if (!values.password) {\n            errors.password = 'Required';\n          } else if (!values.name) {\n            errors.name = 'Required';\n          } \n          return errors;\n        }}\n        onSubmit={async (values, { setSubmitting }) => {\n          await createUser({ variables: { userInput: {\n            ...values\n          }},\n        })}}\n      >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.email}\n          />\n          {errors.email && touched.email && errors.email}\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.password}\n          />\n          {errors.password && touched.password && errors.password}\n          <input\n            type=\"text\"\n            name=\"name\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.name}\n          />\n          {errors.name && touched.name && errors.name}\n          <button type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </button>\n        </form>\n      )}\n      </Formik>\n    </div>\n    </div>\n  );\n}\n  \nexport default Users"]},"metadata":{},"sourceType":"module"}